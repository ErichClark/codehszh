1
00:00:00,137 --> 00:00:04,373
你好。在這段視頻中我們要去寫幾個例子卡雷爾節目

2
00:00:04,373 --> 00:00:08,050
並談談如何測試您的程序中卡雷爾。

3
00:00:08,050 --> 00:00:15,735
所以我們要去寫的第一個程序是一個在移動堆棧球一個點的右側。

4
00:00:15,735 --> 00:00:22,915
因此，我們將開始在世界上的左，想最終在世界上的權利。

5
00:00:22,915 --> 00:00:26,752
因此，讓我們進入我們的編輯和編寫這個程序。

6
00:00:26,752 --> 00:00:29,556
所以在這裡你可以看到卡雷爾是在左下角

7
00:00:29,556 --> 00:00:33,342
並有一疊三個網球在他的面前一斑。

8
00:00:33,342 --> 00:00:38,783
我們想移動的堆棧一個地方，呃，到哪裡它是目前正確的，

9
00:00:38,783 --> 00:00:44,583
但是，我們不能依賴於一個事實，即只有三個球在那裡。

10
00:00:44,583 --> 00:00:48,253
有可能是一百年，有可能是五，可能有七人。

11
00:00:48,253 --> 00:00:50,684
我們要普遍解決這個問題。

12
00:00:50,684 --> 00:00:56,383
我們知道，這堆將在一個特定的位置，但我們不知道有多少球是在這個堆棧中，

13
00:00:56,383 --> 00:01:01,583
所以我們要需要使用，我們已經了解了解決這個問題的控制結構。

14
00:01:01,583 --> 00:01:05,877
由於我們不知道多少次，我們需要做的，

15
00:01:05,877 --> 00:01:10,491
這個呃，讓我們知道，我們可能會想使用一個while循環。

16
00:01:10,491 --> 00:01:13,605
因此，首先，我們將移動到堆棧，

17
00:01:13,605 --> 00:01:24,134
然後，雖然仍然存在球，好了，我們想要做的是什麼，我們想移動一個球。

18
00:01:24,134 --> 00:01:28,108
現在，我們還沒有寫功能“移動一個球”

19
00:01:28,108 --> 00:01:33,491
但如果該功能存在，而且做了我們想要的，我們就已經解決了這個問題。

20
00:01:33,491 --> 00:01:40,350
因此，讓我們看看我們是否能寫會移動一個球一個點右邊的功能。

21
00:01:40,350 --> 00:01:47,529
等等功能“移動一個球。 ”

22
00:01:47,529 --> 00:01:55,532
這個函數有一個球從一堆

23
00:01:55,532 --> 00:02:01,211
並將其移動一個位置向右

24
00:02:01,211 --> 00:02:11,764
然後返回卡雷爾他以前的位置。

25
00:02:11,764 --> 00:02:17,540
因此，我們需要做的，移動一個球是什麼花球

26
00:02:17,540 --> 00:02:20,739
然後，我們想要做的是什麼，我們想搬過來。

27
00:02:20,739 --> 00:02:26,322
因此，我們會繼續前進，我們會放下那個球和

28
00:02:26,322 --> 00:02:29,475
以及所有我們需要轉向，回到我們先前的位置。

29
00:02:29,475 --> 00:02:38,332
因此，我們將扭虧為盈，我們將移動，然後我們再回頭。

30
00:02:38,332 --> 00:02:41,619
所以，在我們的while循環運行它，

31
00:02:41,619 --> 00:02:50,220
就讓我們看看如果我們只調用一次移動一個球會發生什麼。

32
00:02:50,220 --> 00:02:53,736
於是拿起一個球，移動，然後返回我們回到我們在哪裡。

33
00:02:53,736 --> 00:03:04,155
而且我們看到，如果我們重複，只要有仍然存在球，我們將已經解決了這個問題。

34
00:03:04,155 --> 00:03:12,108
因此，移動第一個球，然後第二球，第三球，和你去。

35
00:03:12,108 --> 00:03:16,403
所以這將是一個問題，如果我們在命令專門硬編碼

36
00:03:16,403 --> 00:03:20,596
只有解決這個問題的三個網球。

37
00:03:20,596 --> 00:03:30,497
但是，我們可以看到，如果我們打開了一個新的世界，一個有七個網球，

38
00:03:30,497 --> 00:03:36,630
我們的解決方案將仍然可以工作。

39
00:03:36,630 --> 00:03:39,269
這是因為我們使用了我們的控制結構，

40
00:03:39,269 --> 00:03:48,583
在這種情況下， while循環，幫助我們解決這個問題更普遍。

41
00:03:48,583 --> 00:03:53,250
接下來的問題是要去看看，是一個具有卡雷爾爬上一個世界。

42
00:03:53,250 --> 00:04:02,004
有跡象表明，卡雷爾需要上浮7行，並且有一個狹縫在每一行中，他可以適合通過。

43
00:04:02,004 --> 00:04:05,067
但是，我們不知道世界有多寬是。

44
00:04:05,067 --> 00:04:09,353
我們不能依賴於列在這個世界上的數量。

45
00:04:09,353 --> 00:04:16,632
因此，我們需要在這裡拿出一個好的解決方法。

46
00:04:16,632 --> 00:04:25,146
所以，我們想要做的是首先讓我們看看我們是否可以只移一行，

47
00:04:25,146 --> 00:04:28,962
然後我們會嘗試做的所有行。

48
00:04:28,962 --> 00:04:35,030
因此，我們將編寫一個調用的函數“動起來”。

49
00:04:35,030 --> 00:04:48,627
所以卡雷爾將開始在一個行的左側，

50
00:04:48,627 --> 00:04:59,530
保持在該行移動，直到有空位，

51
00:04:59,530 --> 00:05:09,140
然後再通過狹槽，並返回到該行的開頭。

52
00:05:09,140 --> 00:05:11,384
因此，讓我們看看我們是否能夠做到這一點。

53
00:05:11,384 --> 00:05:15,596
好了，我們需要保持，只要左受阻動人。

54
00:05:15,596 --> 00:05:22,386
所以我們會說， “而左受阻，舉動。 ”

55
00:05:22,386 --> 00:05:27,464
請記住，這是這裡的情況，所以我們需要開括號/關閉括號。

56
00:05:27,464 --> 00:05:31,849
所以，就讓我們看看這樣做為止。

57
00:05:31,849 --> 00:05:34,053
因此，這卡雷爾移動到空位。

58
00:05:34,053 --> 00:05:44,859
現在好了，我們想左轉，通過移動它，再左轉。我們將執行這個。

59
00:05:44,859 --> 00:05:48,065
所以在這一點上，我們想移動卡雷爾在牆上。

60
00:05:48,065 --> 00:05:53,737
所以，呃，用良好的命名約定，我們會寫， “移動牆”

61
00:05:53,737 --> 00:05:57,769
不過，該功能還不存在，所以我們需要把它寫。

62
00:05:57,769 --> 00:06:03,293
因此，我們會寫， “功能移動到牆上。 ”

63
00:06:03,293 --> 00:06:05,678
那麼，我們如何移動到牆？

64
00:06:05,678 --> 00:06:18,428
好了，而前面是明確的，我們移動。

65
00:06:18,428 --> 00:06:27,560
因此，讓我們重新看一下這樣做。

66
00:06:27,560 --> 00:06:41,188
好了，我們需要做的最後一件事就是轉身。

67
00:06:41,188 --> 00:06:46,719
正如你所看到的，因為我在寫這個程序，我在以後的微小變化測試。

68
00:06:46,719 --> 00:06:51,520
這使得它更容易編寫你的程序，並找出他們在做什麼。

69
00:06:51,520 --> 00:06:55,876
在這一點上，我們已經成功地得以移一行，

70
00:06:55,876 --> 00:07:02,756
並重複這一七次，這是固定的次數，我們可以使用for循環。

71
00:07:02,756 --> 00:07:07,813
所以我們寫， “對於VAR我等於零， ”

72
00:07:07,813 --> 00:07:18,923
“我是...... ”哎呀。 “ i小於7 ，我加再加。 ”

73
00:07:18,923 --> 00:07:27,614
而我們想要做七次的事情是向上移動。

74
00:07:27,614 --> 00:07:44,369
因此，讓我們重世界，看看會發生什麼。

75
00:07:44,369 --> 00:07:47,477
好的。我們走吧！我們已經解決了這個問題。

76
00:07:47,477 --> 00:07:53,388
如果我們嘗試在另一個世界，同一個測試只有四列，

77
00:07:53,388 --> 00:08:00,176
我們將看到，我們的計劃是一般性的，仍然有效。

78
00:08:00,176 --> 00:08:02,505
因此，這裡主要外賣有：

79
00:08:02,505 --> 00:08:08,405
為你寫你的程序，確保測試您撥打小，增量變化，

80
00:08:08,405 --> 00:08:13,308
而且，一定要試試你的程序在不同的世界，

81
00:08:13,308 --> 00:08:20,551
並解決問題，一般採用我們的控制結構。